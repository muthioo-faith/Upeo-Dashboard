{"ast":null,"code":"// import { useTheme } from \"@mui/material\";\n// import { ResponsiveChoropleth } from \"@nivo/geo\";\n// import { geoFeatures } from \"../data/mockGeoFeatures\";\n// import { tokens } from \"../theme\";\n// import { mockGeographyData as data } from \"../data/mockData\";\n\n// const GeographyChart = ({ isDashboard = false }) => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n//   return (\n//     <ResponsiveChoropleth\n//       data={data}\n//       theme={{\n//         axis: {\n//           domain: {\n//             line: {\n//               stroke: colors.grey[100],\n//             },\n//           },\n//           legend: {\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//           ticks: {\n//             line: {\n//               stroke: colors.grey[100],\n//               strokeWidth: 1,\n//             },\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//         },\n//         legends: {\n//           text: {\n//             fill: colors.grey[100],\n//           },\n//         },\n//       }}\n//       features={geoFeatures.features}\n//       margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n//       domain={[0, 1000000]}\n//       unknownColor=\"#666666\"\n//       label=\"properties.name\"\n//       valueFormat=\".2s\"\n//       projectionScale={isDashboard ? 40 : 150}\n//       projectionTranslation={isDashboard ? [0.49, 0.6] : [0.5, 0.5]}\n//       projectionRotation={[0, 0, 0]}\n//       borderWidth={1.5}\n//       borderColor=\"#ffffff\"\n//       legends={\n//         !isDashboard\n//           ? [\n//               {\n//                 anchor: \"bottom-left\",\n//                 direction: \"column\",\n//                 justify: true,\n//                 translateX: 20,\n//                 translateY: -100,\n//                 itemsSpacing: 0,\n//                 itemWidth: 94,\n//                 itemHeight: 18,\n//                 itemDirection: \"left-to-right\",\n//                 itemTextColor: colors.grey[100],\n//                 itemOpacity: 0.85,\n//                 symbolSize: 18,\n//                 effects: [\n//                   {\n//                     on: \"hover\",\n//                     style: {\n//                       itemTextColor: \"#ffffff\",\n//                       itemOpacity: 1,\n//                     },\n//                   },\n//                 ],\n//               },\n//             ]\n//           : undefined\n//       }\n//     />\n//   );\n// };\n\n// export default GeographyChart;","map":{"version":3,"names":[],"sources":["/home/student/Desktop/Upeo/dashboard/src/components/GeographyChart.jsx"],"sourcesContent":["// import { useTheme } from \"@mui/material\";\n// import { ResponsiveChoropleth } from \"@nivo/geo\";\n// import { geoFeatures } from \"../data/mockGeoFeatures\";\n// import { tokens } from \"../theme\";\n// import { mockGeographyData as data } from \"../data/mockData\";\n\n// const GeographyChart = ({ isDashboard = false }) => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n//   return (\n//     <ResponsiveChoropleth\n//       data={data}\n//       theme={{\n//         axis: {\n//           domain: {\n//             line: {\n//               stroke: colors.grey[100],\n//             },\n//           },\n//           legend: {\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//           ticks: {\n//             line: {\n//               stroke: colors.grey[100],\n//               strokeWidth: 1,\n//             },\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//         },\n//         legends: {\n//           text: {\n//             fill: colors.grey[100],\n//           },\n//         },\n//       }}\n//       features={geoFeatures.features}\n//       margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n//       domain={[0, 1000000]}\n//       unknownColor=\"#666666\"\n//       label=\"properties.name\"\n//       valueFormat=\".2s\"\n//       projectionScale={isDashboard ? 40 : 150}\n//       projectionTranslation={isDashboard ? [0.49, 0.6] : [0.5, 0.5]}\n//       projectionRotation={[0, 0, 0]}\n//       borderWidth={1.5}\n//       borderColor=\"#ffffff\"\n//       legends={\n//         !isDashboard\n//           ? [\n//               {\n//                 anchor: \"bottom-left\",\n//                 direction: \"column\",\n//                 justify: true,\n//                 translateX: 20,\n//                 translateY: -100,\n//                 itemsSpacing: 0,\n//                 itemWidth: 94,\n//                 itemHeight: 18,\n//                 itemDirection: \"left-to-right\",\n//                 itemTextColor: colors.grey[100],\n//                 itemOpacity: 0.85,\n//                 symbolSize: 18,\n//                 effects: [\n//                   {\n//                     on: \"hover\",\n//                     style: {\n//                       itemTextColor: \"#ffffff\",\n//                       itemOpacity: 1,\n//                     },\n//                   },\n//                 ],\n//               },\n//             ]\n//           : undefined\n//       }\n//     />\n//   );\n// };\n\n// export default GeographyChart;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}