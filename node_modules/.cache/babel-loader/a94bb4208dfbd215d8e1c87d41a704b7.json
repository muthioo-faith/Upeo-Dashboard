{"ast":null,"code":"/*!\nFullCalendar v5.11.3\nDocs & License: https://fullcalendar.io/\n(c) 2022 Adam Shaw\n*/\nimport './main.css';\nimport { createRef, getStickyHeaderDates, createElement, ViewRoot, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DateComponent, buildNavLinkAttrs, DayCellContent, Fragment, BaseComponent, createFormatter, StandardEvent, buildSegTimeText, EventRoot, getSegAnchorAttrs, memoize, MoreLinkRoot, getSegMeta, createAriaClickAttrs, getUniqueDomId, setRef, DayCellRoot, WeekNumberRoot, buildEntryKey, intersectSpans, SegHierarchy, intersectRanges, addDays, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, Slicer, DayHeader, DaySeriesModel, DayTableModel, addWeeks, diffWeeks, DateProfileGenerator, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign, __spreadArray } from 'tslib';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nvar TableView = /** @class */function (_super) {\n  __extends(TableView, _super);\n  function TableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.headerElRef = createRef();\n    return _this;\n  }\n  TableView.prototype.renderSimpleLayout = function (headerRowContent, bodyContent) {\n    var _a = this,\n      props = _a.props,\n      context = _a.context;\n    var sections = [];\n    var stickyHeaderDates = getStickyHeaderDates(context.options);\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: {\n        content: bodyContent\n      }\n    });\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: [] /* TODO: make optional? */,\n        sections: sections\n      }));\n    });\n  };\n  TableView.prototype.renderHScrollLayout = function (headerRowContent, bodyContent, colCnt, dayMinWidth) {\n    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n    var _a = this,\n      props = _a.props,\n      context = _a.context;\n    var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    var sections = [];\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent\n      }]\n    });\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim\n        }]\n      });\n    }\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    });\n  };\n  return TableView;\n}(DateComponent);\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    byRow[seg.row].push(seg);\n  }\n  return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n  for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n    var seg = segs_2[_i];\n    byCol[seg.firstCol].push(seg);\n  }\n  return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {\n      var seg = _a[_i];\n      byRow[seg.row].segs.push(seg);\n    }\n  }\n  return byRow;\n}\nvar TableCellTop = /** @class */function (_super) {\n  __extends(TableCellTop, _super);\n  function TableCellTop() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TableCellTop.prototype.render = function () {\n    var props = this.props;\n    var navLinkAttrs = buildNavLinkAttrs(this.context, props.date);\n    return createElement(DayCellContent, {\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      defaultContent: renderTopInner\n    }, function (innerElRef, innerContent) {\n      return (innerContent || props.forceDayTop) && createElement(\"div\", {\n        className: \"fc-daygrid-day-top\",\n        ref: innerElRef\n      }, createElement(\"a\", __assign({\n        id: props.dayNumberId,\n        className: \"fc-daygrid-day-number\"\n      }, navLinkAttrs), innerContent || createElement(Fragment, null, \"\\u00A0\")));\n    });\n  };\n  return TableCellTop;\n}(BaseComponent);\nfunction renderTopInner(props) {\n  return props.dayNumberText;\n}\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol &&\n  // can't be multi-day\n  seg.isStart &&\n  // \"\n  seg.isEnd // \"\n  ;\n}\n\nvar TableBlockEvent = /** @class */function (_super) {\n  __extends(TableBlockEvent, _super);\n  function TableBlockEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TableBlockEvent.prototype.render = function () {\n    var props = this.props;\n    return createElement(StandardEvent, __assign({}, props, {\n      extraClassNames: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n      defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n      defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n      disableResizing: !props.seg.eventRange.def.allDay\n    }));\n  };\n  return TableBlockEvent;\n}(BaseComponent);\nvar TableListItemEvent = /** @class */function (_super) {\n  __extends(TableListItemEvent, _super);\n  function TableListItemEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TableListItemEvent.prototype.render = function () {\n    var _a = this,\n      props = _a.props,\n      context = _a.context;\n    var timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n    var timeText = buildSegTimeText(props.seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n    return createElement(EventRoot, {\n      seg: props.seg,\n      timeText: timeText,\n      defaultContent: renderInnerContent,\n      isDragging: props.isDragging,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: props.isSelected,\n      isPast: props.isPast,\n      isFuture: props.isFuture,\n      isToday: props.isToday\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return (\n        // we don't use styles!\n        createElement(\"a\", __assign({\n          className: ['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' '),\n          ref: rootElRef\n        }, getSegAnchorAttrs(props.seg, context)), innerContent)\n      );\n    });\n  };\n  return TableListItemEvent;\n}(BaseComponent);\nfunction renderInnerContent(innerProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: innerProps.borderColor || innerProps.backgroundColor\n    }\n  }), innerProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, innerProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")));\n}\nvar TableCellMoreLink = /** @class */function (_super) {\n  __extends(TableCellMoreLink, _super);\n  function TableCellMoreLink() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.compileSegs = memoize(compileSegs);\n    return _this;\n  }\n  TableCellMoreLink.prototype.render = function () {\n    var props = this.props;\n    var _a = this.compileSegs(props.singlePlacements),\n      allSegs = _a.allSegs,\n      invisibleSegs = _a.invisibleSegs;\n    return createElement(MoreLinkRoot, {\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      allDayDate: props.allDayDate,\n      moreCnt: props.moreCnt,\n      allSegs: allSegs,\n      hiddenSegs: invisibleSegs,\n      alignmentElRef: props.alignmentElRef,\n      alignGridTop: props.alignGridTop,\n      extraDateSpan: props.extraDateSpan,\n      popoverContent: function () {\n        var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n        return createElement(Fragment, null, allSegs.map(function (seg) {\n          var instanceId = seg.eventRange.instance.instanceId;\n          return createElement(\"div\", {\n            className: \"fc-daygrid-event-harness\",\n            key: instanceId,\n            style: {\n              visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n            }\n          }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n            seg: seg,\n            isDragging: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, __assign({\n            seg: seg,\n            isDragging: false,\n            isResizing: false,\n            isDateSelecting: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))));\n        }));\n      }\n    }, function (rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) {\n      return createElement(\"a\", __assign({\n        ref: rootElRef,\n        className: ['fc-daygrid-more-link'].concat(classNames).join(' '),\n        title: title,\n        \"aria-expanded\": isExpanded,\n        \"aria-controls\": popoverId\n      }, createAriaClickAttrs(handleClick)), innerContent);\n    });\n  };\n  return TableCellMoreLink;\n}(BaseComponent);\nfunction compileSegs(singlePlacements) {\n  var allSegs = [];\n  var invisibleSegs = [];\n  for (var _i = 0, singlePlacements_1 = singlePlacements; _i < singlePlacements_1.length; _i++) {\n    var placement = singlePlacements_1[_i];\n    allSegs.push(placement.seg);\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg);\n    }\n  }\n  return {\n    allSegs: allSegs,\n    invisibleSegs: invisibleSegs\n  };\n}\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\nvar TableCell = /** @class */function (_super) {\n  __extends(TableCell, _super);\n  function TableCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.rootElRef = createRef();\n    _this.state = {\n      dayNumberId: getUniqueDomId()\n    };\n    _this.handleRootEl = function (el) {\n      setRef(_this.rootElRef, el);\n      setRef(_this.props.elRef, el);\n    };\n    return _this;\n  }\n  TableCell.prototype.render = function () {\n    var _a = this,\n      context = _a.context,\n      props = _a.props,\n      state = _a.state,\n      rootElRef = _a.rootElRef;\n    var date = props.date,\n      dateProfile = props.dateProfile;\n    var navLinkAttrs = buildNavLinkAttrs(context, date, 'week');\n    return createElement(DayCellRoot, {\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      elRef: this.handleRootEl\n    }, function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) {\n      return createElement(\"td\", __assign({\n        ref: dayElRef,\n        role: \"gridcell\",\n        className: ['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')\n      }, rootDataAttrs, props.extraDataAttrs, props.showDayNumber ? {\n        'aria-labelledby': state.dayNumberId\n      } : {}), createElement(\"div\", {\n        className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n        ref: props.innerElRef /* different from hook system! RENAME */\n      }, props.showWeekNumber && createElement(WeekNumberRoot, {\n        date: date,\n        defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n      }, function (weekElRef, weekClassNames, innerElRef, innerContent) {\n        return createElement(\"a\", __assign({\n          ref: weekElRef,\n          className: ['fc-daygrid-week-number'].concat(weekClassNames).join(' ')\n        }, navLinkAttrs), innerContent);\n      }), !isDisabled && createElement(TableCellTop, {\n        date: date,\n        dateProfile: dateProfile,\n        showDayNumber: props.showDayNumber,\n        dayNumberId: state.dayNumberId,\n        forceDayTop: props.forceDayTop,\n        todayRange: props.todayRange,\n        extraHookProps: props.extraHookProps\n      }), createElement(\"div\", {\n        className: \"fc-daygrid-day-events\",\n        ref: props.fgContentElRef\n      }, props.fgContent, createElement(\"div\", {\n        className: \"fc-daygrid-day-bottom\",\n        style: {\n          marginTop: props.moreMarginTop\n        }\n      }, createElement(TableCellMoreLink, {\n        allDayDate: date,\n        singlePlacements: props.singlePlacements,\n        moreCnt: props.moreCnt,\n        alignmentElRef: rootElRef,\n        alignGridTop: !props.showDayNumber,\n        extraDateSpan: props.extraDateSpan,\n        dateProfile: props.dateProfile,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        todayRange: props.todayRange\n      }))), createElement(\"div\", {\n        className: \"fc-daygrid-day-bg\"\n      }, props.bgContent)));\n    });\n  };\n  return TableCell;\n}(DateComponent);\nfunction computeFgSegPlacement(segs,\n// assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {\n  var hierarchy = new DayGridSegHierarchy();\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  }\n  // create segInputs only for segs with known heights\n  var segInputs = [];\n  var unknownHeightSegs = [];\n  for (var i = 0; i < segs.length; i += 1) {\n    var seg = segs[i];\n    var instanceId = seg.eventRange.instance.instanceId;\n    var eventHeight = eventInstanceHeights[instanceId];\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var segRects = hierarchy.toRects();\n  var _a = placeRects(segRects, segs, cells),\n    singleColPlacements = _a.singleColPlacements,\n    multiColPlacements = _a.multiColPlacements,\n    leftoverMargins = _a.leftoverMargins;\n  var moreCnts = [];\n  var moreMarginTops = [];\n  // add segs with unknown heights\n  for (var _i = 0, unknownHeightSegs_1 = unknownHeightSegs; _i < unknownHeightSegs_1.length; _i++) {\n    var seg = unknownHeightSegs_1[_i];\n    multiColPlacements[seg.firstCol].push({\n      seg: seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n    for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  }\n  // add the hidden entries\n  for (var col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0);\n  }\n  for (var _b = 0, hiddenEntries_1 = hiddenEntries; _b < hiddenEntries_1.length; _b++) {\n    var hiddenEntry = hiddenEntries_1[_b];\n    var seg = segs[hiddenEntry.index];\n    var hiddenSpan = hiddenEntry.span;\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n    for (var col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1;\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  }\n  // deal with leftover margins\n  for (var col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col]);\n  }\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    moreCnts: moreCnts,\n    moreMarginTops: moreMarginTops\n  };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n  var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  var singleColPlacements = [];\n  var multiColPlacements = [];\n  var leftoverMargins = [];\n  for (var col = 0; col < cells.length; col += 1) {\n    var rects = rectsByEachCol[col];\n    // compute all static segs in singlePlacements\n    var singlePlacements = [];\n    var currentHeight = 0;\n    var currentMarginTop = 0;\n    for (var _i = 0, rects_1 = rects; _i < rects_1.length; _i++) {\n      var rect = rects_1[_i];\n      var seg = segs[rect.index];\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight\n      });\n      currentHeight = rect.levelCoord + rect.thickness;\n    }\n    // compute mixed static/absolute segs in multiPlacements\n    var multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n    for (var _a = 0, rects_2 = rects; _a < rects_2.length; _a++) {\n      var rect = rects_2[_a];\n      var seg = segs[rect.index];\n      var isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n      var isFirstCol = rect.span.start === col;\n      currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n      currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness;\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0\n          });\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop // claim the margin\n        });\n\n        currentMarginTop = 0;\n      }\n    }\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    leftoverMargins: leftoverMargins\n  };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n  var rectsByEachCol = [];\n  for (var col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n  for (var _i = 0, rects_3 = rects; _i < rects_3.length; _i++) {\n    var rect = rects_3[_i];\n    for (var col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect);\n    }\n  }\n  return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n  var eventRange = seg.eventRange;\n  var origRange = eventRange.range;\n  var slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return __assign(__assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: __assign(__assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\nvar DayGridSegHierarchy = /** @class */function (_super) {\n  __extends(DayGridSegHierarchy, _super);\n  function DayGridSegHierarchy() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // config\n    _this.hiddenConsumes = false;\n    // allows us to keep hidden entries in the hierarchy so they take up space\n    _this.forceHidden = {};\n    return _this;\n  }\n  DayGridSegHierarchy.prototype.addSegs = function (segInputs) {\n    var _this = this;\n    var hiddenSegs = _super.prototype.addSegs.call(this, segInputs);\n    var entriesByLevel = this.entriesByLevel;\n    var excludeHidden = function (entry) {\n      return !_this.forceHidden[buildEntryKey(entry)];\n    };\n    // remove the forced-hidden segs\n    for (var level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n    }\n    return hiddenSegs;\n  };\n  DayGridSegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {\n    var _a = this,\n      entriesByLevel = _a.entriesByLevel,\n      forceHidden = _a.forceHidden;\n    var touchingEntry = insertion.touchingEntry,\n      touchingLevel = insertion.touchingLevel,\n      touchingLateral = insertion.touchingLateral;\n    if (this.hiddenConsumes && touchingEntry) {\n      var touchingEntryId = buildEntryKey(touchingEntry);\n      // if not already hidden\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          var placeholderEntry = __assign(__assign({}, touchingEntry), {\n            span: intersectSpans(touchingEntry.span, entry.span)\n          });\n          var placeholderEntryId = buildEntryKey(placeholderEntry);\n          forceHidden[placeholderEntryId] = true;\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n          this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true;\n          hiddenEntries.push(touchingEntry);\n        }\n      }\n    }\n    return _super.prototype.handleInvalidInsertion.call(this, insertion, entry, hiddenEntries);\n  };\n  return DayGridSegHierarchy;\n}(SegHierarchy);\nvar TableRow = /** @class */function (_super) {\n  __extends(TableRow, _super);\n  function TableRow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.cellElRefs = new RefMap(); // the <td>\n    _this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n    _this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n    _this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n    _this.rootElRef = createRef();\n    _this.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      eventInstanceHeights: {}\n    };\n    return _this;\n  }\n  TableRow.prototype.render = function () {\n    var _this = this;\n    var _a = this,\n      props = _a.props,\n      state = _a.state,\n      context = _a.context;\n    var options = context.options;\n    var colCnt = props.cells.length;\n    var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n    var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n    var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n    var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n    var _b = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells),\n      singleColPlacements = _b.singleColPlacements,\n      multiColPlacements = _b.multiColPlacements,\n      moreCnts = _b.moreCnts,\n      moreMarginTops = _b.moreMarginTops;\n    var isForcedInvisible =\n    // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    return createElement(\"tr\", {\n      ref: this.rootElRef,\n      role: \"row\"\n    }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n      var normalFgNodes = _this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n      var mirrorFgNodes = _this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n      return createElement(TableCell, {\n        key: cell.key,\n        elRef: _this.cellElRefs.createRef(cell.key),\n        innerElRef: _this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */,\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        showDayNumber: props.showDayNumbers,\n        showWeekNumber: props.showWeekNumbers && col === 0,\n        forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */,\n        todayRange: props.todayRange,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        extraHookProps: cell.extraHookProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        extraDateSpan: cell.extraDateSpan,\n        moreCnt: moreCnts[col],\n        moreMarginTop: moreMarginTops[col],\n        singlePlacements: singleColPlacements[col],\n        fgContentElRef: _this.fgElRefs.createRef(cell.key),\n        fgContent:\n        // Fragment scopes the keys\n        createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n        bgContent:\n        // Fragment scopes the keys\n        createElement(Fragment, null, _this.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this.renderFillSegs(businessHoursByCol[col], 'non-business'), _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))\n      });\n    }));\n  };\n  TableRow.prototype.componentDidMount = function () {\n    this.updateSizing(true);\n  };\n  TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var currentProps = this.props;\n    this.updateSizing(!isPropsEqual(prevProps, currentProps));\n  };\n  TableRow.prototype.getHighlightSegs = function () {\n    var props = this.props;\n    if (props.eventDrag && props.eventDrag.segs.length) {\n      // messy check\n      return props.eventDrag.segs;\n    }\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n    return props.dateSelectionSegs;\n  };\n  TableRow.prototype.getMirrorSegs = function () {\n    var props = this.props;\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n    return [];\n  };\n  TableRow.prototype.renderFgSegs = function (col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n    var context = this.context;\n    var eventSelection = this.props.eventSelection;\n    var framePositions = this.state.framePositions;\n    var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n    var isMirror = isDragging || isResizing || isDateSelecting;\n    var nodes = [];\n    if (framePositions) {\n      for (var _i = 0, segPlacements_1 = segPlacements; _i < segPlacements_1.length; _i++) {\n        var placement = segPlacements_1[_i];\n        var seg = placement.seg;\n        var instanceId = seg.eventRange.instance.instanceId;\n        var key = instanceId + ':' + col;\n        var isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n        var isAbsolute = placement.isAbsolute;\n        var left = '';\n        var right = '';\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0;\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n          } else {\n            left = 0;\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n          }\n        }\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n        nodes.push(createElement(\"div\", {\n          className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n          key: key,\n          ref: isMirror ? null : this.segHarnessRefs.createRef(key),\n          style: {\n            visibility: isVisible ? '' : 'hidden',\n            marginTop: isAbsolute ? '' : placement.marginTop,\n            top: isAbsolute ? placement.absoluteTop : '',\n            left: left,\n            right: right\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange)))));\n      }\n    }\n    return nodes;\n  };\n  TableRow.prototype.renderFillSegs = function (segs, fillType) {\n    var isRtl = this.context.isRtl;\n    var todayRange = this.props.todayRange;\n    var framePositions = this.state.framePositions;\n    var nodes = [];\n    if (framePositions) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n        };\n        nodes.push(createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-daygrid-bg-harness\",\n          style: leftRightCss\n        }, fillType === 'bg-event' ? createElement(BgEvent, __assign({\n          seg: seg\n        }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n      }\n    }\n    return createElement.apply(void 0, __spreadArray([Fragment, {}], nodes));\n  };\n  TableRow.prototype.updateSizing = function (isExternalSizingChange) {\n    var _a = this,\n      props = _a.props,\n      frameElRefs = _a.frameElRefs;\n    if (!props.forPrint && props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        var frameEls = props.cells.map(function (cell) {\n          return frameElRefs.currentMap[cell.key];\n        });\n        if (frameEls.length) {\n          var originEl = this.rootElRef.current;\n          this.setState({\n            framePositions: new PositionCache(originEl, frameEls, true,\n            // isHorizontal\n            false)\n          });\n        }\n      }\n      var oldInstanceHeights = this.state.eventInstanceHeights;\n      var newInstanceHeights = this.queryEventInstanceHeights();\n      var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n      this.safeSetState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: __assign(__assign({}, oldInstanceHeights), newInstanceHeights),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n      });\n    }\n  };\n  TableRow.prototype.queryEventInstanceHeights = function () {\n    var segElMap = this.segHarnessRefs.currentMap;\n    var eventInstanceHeights = {};\n    // get the max height amongst instance segs\n    for (var key in segElMap) {\n      var height = Math.round(segElMap[key].getBoundingClientRect().height);\n      var instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);\n    }\n    return eventInstanceHeights;\n  };\n  TableRow.prototype.computeMaxContentHeight = function () {\n    var firstKey = this.props.cells[0].key;\n    var cellEl = this.cellElRefs.currentMap[firstKey];\n    var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n  };\n  TableRow.prototype.getCellEls = function () {\n    var elMap = this.cellElRefs.currentMap;\n    return this.props.cells.map(function (cell) {\n      return elMap[cell.key];\n    });\n  };\n  return TableRow;\n}(DateComponent);\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n  var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n  return mirrorSegs.map(function (seg) {\n    return {\n      seg: seg,\n      isVisible: true,\n      isAbsolute: true,\n      absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n      marginTop: 0\n    };\n  });\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n  var topsByInstanceId = {};\n  for (var _i = 0, colPlacements_1 = colPlacements; _i < colPlacements_1.length; _i++) {\n    var placements = colPlacements_1[_i];\n    for (var _a = 0, placements_1 = placements; _a < placements_1.length; _a++) {\n      var placement = placements_1[_a];\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n    }\n  }\n  return topsByInstanceId;\n}\nvar Table = /** @class */function (_super) {\n  __extends(Table, _super);\n  function Table() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this.splitBgEventSegs = memoize(splitSegsByRow);\n    _this.splitFgEventSegs = memoize(splitSegsByRow);\n    _this.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this.splitEventDrag = memoize(splitInteractionByRow);\n    _this.splitEventResize = memoize(splitInteractionByRow);\n    _this.rowRefs = new RefMap();\n    _this.handleRootEl = function (rootEl) {\n      _this.rootEl = rootEl;\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl,\n          isHitComboAllowed: _this.props.isHitComboAllowed\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n    return _this;\n  }\n  Table.prototype.render = function () {\n    var _this = this;\n    var props = this.props;\n    var dateProfile = props.dateProfile,\n      dayMaxEventRows = props.dayMaxEventRows,\n      dayMaxEvents = props.dayMaxEvents,\n      expandRows = props.expandRows;\n    var rowCnt = props.cells.length;\n    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n    var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n    var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n    var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false;\n      dayMaxEventRows = null;\n      dayMaxEvents = null;\n    }\n    var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n    ];\n\n    return createElement(\"div\", {\n      className: classNames.join(' '),\n      ref: this.handleRootEl,\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(NowTimer, {\n      unit: \"day\"\n    }, function (nowDate, todayRange) {\n      return createElement(Fragment, null, createElement(\"table\", {\n        role: \"presentation\",\n        className: \"fc-scrollgrid-sync-table\",\n        style: {\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n          height: expandRows ? props.clientHeight : ''\n        }\n      }, props.colGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, props.cells.map(function (cells, row) {\n        return createElement(TableRow, {\n          ref: _this.rowRefs.createRef(row),\n          key: cells.length ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */ : row // in case there are no cells (like when resource view is loading)\n          ,\n          showDayNumbers: rowCnt > 1,\n          showWeekNumbers: props.showWeekNumbers,\n          todayRange: todayRange,\n          dateProfile: dateProfile,\n          cells: cells,\n          renderIntro: props.renderRowIntro,\n          businessHourSegs: businessHourSegsByRow[row],\n          eventSelection: props.eventSelection,\n          bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */,\n          fgEventSegs: fgEventSegsByRow[row],\n          dateSelectionSegs: dateSelectionSegsByRow[row],\n          eventDrag: eventDragByRow[row],\n          eventResize: eventResizeByRow[row],\n          dayMaxEvents: dayMaxEvents,\n          dayMaxEventRows: dayMaxEventRows,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          forPrint: props.forPrint\n        });\n      }))));\n    }));\n  };\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n  Table.prototype.prepareHits = function () {\n    this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n      return rowObj.getCellEls()[0];\n    }),\n    // first cell el in each row. TODO: not optimal\n    false, true);\n    this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(),\n    // cell els in first row\n    true,\n    // horizontal\n    false);\n  };\n  Table.prototype.queryHit = function (positionLeft, positionTop) {\n    var _a = this,\n      colPositions = _a.colPositions,\n      rowPositions = _a.rowPositions;\n    var col = colPositions.leftToIndex(positionLeft);\n    var row = rowPositions.topToIndex(positionTop);\n    if (row != null && col != null) {\n      var cell = this.props.cells[row][col];\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: __assign({\n          range: this.getCellRange(row, col),\n          allDay: true\n        }, cell.extraDateSpan),\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        },\n        layer: 0\n      };\n    }\n    return null;\n  };\n  Table.prototype.getCellEl = function (row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n  };\n\n  Table.prototype.getCellRange = function (row, col) {\n    var start = this.props.cells[row][col].date;\n    var end = addDays(start, 1);\n    return {\n      start: start,\n      end: end\n    };\n  };\n  return Table;\n}(DateComponent);\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\nvar DayTableSlicer = /** @class */function (_super) {\n  __extends(DayTableSlicer, _super);\n  function DayTableSlicer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.forceDayIfListItem = true;\n    return _this;\n  }\n  DayTableSlicer.prototype.sliceRange = function (dateRange, dayTableModel) {\n    return dayTableModel.sliceRange(dateRange);\n  };\n  return DayTableSlicer;\n}(Slicer);\nvar DayTable = /** @class */function (_super) {\n  __extends(DayTable, _super);\n  function DayTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.slicer = new DayTableSlicer();\n    _this.tableRef = createRef();\n    return _this;\n  }\n  DayTable.prototype.render = function () {\n    var _a = this,\n      props = _a.props,\n      context = _a.context;\n    return createElement(Table, __assign({\n      ref: this.tableRef\n    }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n      dateProfile: props.dateProfile,\n      cells: props.dayTableModel.cells,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: props.forPrint\n    }));\n  };\n  return DayTable;\n}(DateComponent);\nvar DayTableView = /** @class */function (_super) {\n  __extends(DayTableView, _super);\n  function DayTableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.buildDayTableModel = memoize(buildDayTableModel);\n    _this.headerRef = createRef();\n    _this.tableRef = createRef();\n    return _this;\n  }\n  DayTableView.prototype.render = function () {\n    var _this = this;\n    var _a = this.context,\n      options = _a.options,\n      dateProfileGenerator = _a.dateProfileGenerator;\n    var props = this.props;\n    var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n    var headerContent = options.dayHeaders && createElement(DayHeader, {\n      ref: this.headerRef,\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: dayTableModel.rowCnt === 1\n    });\n    var bodyContent = function (contentArg) {\n      return createElement(DayTable, {\n        ref: _this.tableRef,\n        dateProfile: props.dateProfile,\n        dayTableModel: dayTableModel,\n        businessHours: props.businessHours,\n        dateSelection: props.dateSelection,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        nextDayThreshold: options.nextDayThreshold,\n        colGroupNode: contentArg.tableColGroupNode,\n        tableMinWidth: contentArg.tableMinWidth,\n        dayMaxEvents: options.dayMaxEvents,\n        dayMaxEventRows: options.dayMaxEventRows,\n        showWeekNumbers: options.weekNumbers,\n        expandRows: !props.isHeightAuto,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      });\n    };\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  };\n  return DayTableView;\n}(TableView);\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\nvar TableDateProfileGenerator = /** @class */function (_super) {\n  __extends(TableDateProfileGenerator, _super);\n  function TableDateProfileGenerator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  // Computes the date range that will be rendered.\n  TableDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n    var dateEnv = this.props.dateEnv;\n    var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n    var start = renderRange.start;\n    var end = renderRange.end;\n    var endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start);\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end);\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1);\n      }\n    }\n    // ensure 6 weeks\n    if (this.props.monthMode && this.props.fixedWeekCount) {\n      var rowCnt = Math.ceil(\n      // could be partial weeks due to hiddenDays\n      diffWeeks(start, end));\n      end = addWeeks(end, 6 - rowCnt);\n    }\n    return {\n      start: start,\n      end: end\n    };\n  };\n  return TableDateProfileGenerator;\n}(DateProfileGenerator);\nvar main = createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator\n    },\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: {\n        months: 1\n      },\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableView, buildDayTableModel };","map":{"version":3,"mappings":"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","names":["__extends","_this","createRef","TableView","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","getStickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","headerElRef","tableClassName","rowContent","liquid","content","createElement","ViewRoot","viewSpec","rootElRef","classNames","ref","className","concat","join","SimpleScrollGrid","isHeightAuto","forPrint","collapsibleWidth","cols","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","getStickyFooterScrollbar","chunks","renderScrollShim","colGroups","span","minWidth","DateComponent","splitSegsByRow","segs","rowCnt","byRow","i","segs_1","_i","seg","row","splitSegsByFirstCol","byCol","segs_2","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","_a","TableCellTop","navLinkAttrs","buildNavLinkAttrs","date","DayCellContent","dateProfile","todayRange","showDayNumber","extraHookProps","defaultContent","renderTopInner","innerElRef","innerContent","forceDayTop","id","dayNumberId","Fragment","BaseComponent","dayNumberText","DEFAULT_TABLE_EVENT_TIME_FORMAT","createFormatter","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","eventRange","display","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","StandardEvent","extraClassNames","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","buildSegTimeText","EventRoot","renderInnerContent","isDragging","isResizing","isDateSelecting","isSelected","isPast","isFuture","isToday","getSegAnchorAttrs","innerProps","style","borderColor","backgroundColor","event","title","memoize","compileSegs","TableCellMoreLink","singlePlacements","allSegs","invisibleSegs","MoreLinkRoot","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","eventSelection","getSegMeta","handleClick","isExpanded","popoverId","createAriaClickAttrs","singlePlacements_1","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","getUniqueDomId","el","setRef","TableCell","state","DayCellRoot","handleRootEl","dayElRef","dayClassNames","rootDataAttrs","isDisabled","role","extraDataAttrs","showWeekNumber","WeekNumberRoot","defaultFormat","weekElRef","weekClassNames","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","eventInstanceHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","index","thickness","start","end","hiddenEntries","addSegs","segRects","toRects","placeRects","singleColPlacements","multiColPlacements","leftoverMargins","moreCnts","moreMarginTops","unknownHeightSegs_1","isAbsolute","absoluteTop","col","resliceSeg","hiddenEntries_1","_b","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rects_1","rect","levelCoord","multiPlacements","rects_2","isFirstCol","rects_3","spanStart","spanEnd","origRange","range","slicedRange","intersectRanges","addDays","durationEditable","valueOf","_super","excludeHidden","entry","forceHidden","buildEntryKey","level","entriesByLevel","filter","insertion","touchingLevel","touchingLateral","touchingEntry","touchingEntryId","placeholderEntry","intersectSpans","placeholderEntryId","splitEntry","handleInvalidInsertion","SegHierarchy","RefMap","framePositions","TableRow","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","sortEventSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","Boolean","cellElRefs","frameElRefs","showDayNumbers","showWeekNumbers","fgElRefs","renderFillSegs","updateSizing","prevProps","prevState","currentProps","isPropsEqual","dateSelectionSegs","segPlacements","isMirror","nodes","segPlacements_1","left","right","isRtl","lefts","rights","segHarnessRefs","top","fillType","leftRightCss","buildEventRangeKey","BgEvent","renderFill","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","setState","PositionCache","oldInstanceHeights","newInstanceHeights","queryEventInstanceHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","split","max","firstKey","cellEl","fcContainerEl","bottom","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","colPlacements_1","placements","placements_1","rootEl","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","Table","expandRows","businessHourSegsByRow","splitBusinessHourSegs","bgEventSegsByRow","splitBgEventSegs","fgEventSegsByRow","splitFgEventSegs","dateSelectionSegsByRow","splitDateSelectionSegs","eventDragByRow","splitEventDrag","eventResizeByRow","splitEventResize","limitViaBalanced","width","tableMinWidth","NowTimer","unit","nowDate","clientHeight","colGroupNode","rowRefs","toISOString","renderRowIntro","isSegAllDay","rowPositions","collect","rowObj","getCellEls","colPositions","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","DayTableSlicer","dateRange","dayTableModel","sliceRange","Slicer","DayTable","tableRef","slicer","sliceProps","nextDayThreshold","headerAlignElRef","buildDayTableModel","DayTableView","dateProfileGenerator","headerContent","dayHeaders","DayHeader","headerRef","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","renderHScrollLayout","renderSimpleLayout","daySeries","DaySeriesModel","renderRange","DayTableModel","test","currentRangeUnit","TableDateProfileGenerator","currentRange","isRangeAllDay","buildRenderRange","endOfWeek","dateEnv","startOfWeek","addWeeks","monthMode","fixedWeekCount","ceil","diffWeeks","DateProfileGenerator","createPlugin","initialView","views","dayGrid","component","dateProfileGeneratorClass","dayGridDay","duration","days","dayGridWeek","weeks","dayGridMonth","months"],"sources":["/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableView.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableSeg.ts","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableCellTop.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/event-rendering.ts","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableBlockEvent.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableListItemEvent.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableCellMoreLink.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableCell.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/event-placement.ts","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableRow.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/Table.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/DayTableSlicer.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/DayTable.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/DayTableView.tsx","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/TableDateProfileGenerator.ts","/home/student/Desktop/Upeo/dashboard/node_modules/@fullcalendar/daygrid/src/main.ts"],"sourcesContent":["import {\n  VNode, createElement,\n  SimpleScrollGrid,\n  SimpleScrollGridSection,\n  ChunkContentCallbackArgs,\n  createRef,\n  ScrollGridSectionConfig,\n  ViewRoot,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  ChunkConfigRowContent,\n  Dictionary,\n} from '@fullcalendar/common'\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nexport abstract class TableView<State=Dictionary> extends DateComponent<ViewProps, State> {\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n\n  renderSimpleLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n  ) {\n    let { props, context } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: { content: bodyContent },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              cols={[] /* TODO: make optional? */}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n    colCnt: number,\n    dayMinWidth: number,\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { props, context } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        }],\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent,\n      }],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              colGroups={[{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n}\n","import { EventSegUiInteractionState, Seg } from '@fullcalendar/common'\n\n// this is a DATA STRUCTURE, not a component\n\nexport interface TableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport function splitSegsByRow(segs: TableSeg[], rowCnt: number) {\n  let byRow: TableSeg[][] = []\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = []\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg)\n  }\n\n  return byRow\n}\n\nexport function splitSegsByFirstCol(segs: TableSeg[], colCnt: number) {\n  let byCol: TableSeg[][] = []\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = []\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg)\n  }\n\n  return byCol\n}\n\nexport function splitInteractionByRow(ui: EventSegUiInteractionState | null, rowCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement,\n  DateMarker,\n  DateRange,\n  DayCellContentArg,\n  DayCellContent,\n  BaseComponent,\n  DateProfile,\n  Dictionary,\n  Fragment,\n  buildNavLinkAttrs,\n} from '@fullcalendar/common'\n\ninterface TableCellTopProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  showDayNumber: boolean\n  dayNumberId: string\n  forceDayTop: boolean // hack to force-create an element with height (created by a nbsp)\n  todayRange: DateRange\n  extraHookProps?: Dictionary\n}\n\nexport class TableCellTop extends BaseComponent<TableCellTopProps> {\n  render() {\n    let { props } = this\n    let navLinkAttrs = buildNavLinkAttrs(this.context, props.date)\n\n    return (\n      <DayCellContent\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        defaultContent={renderTopInner}\n      >\n        {(innerElRef, innerContent) => (\n          (innerContent || props.forceDayTop) && (\n            <div className=\"fc-daygrid-day-top\" ref={innerElRef}>\n              <a\n                id={props.dayNumberId}\n                className=\"fc-daygrid-day-number\"\n                {...navLinkAttrs}\n              >\n                {innerContent || <Fragment>&nbsp;</Fragment>}\n              </a>\n            </div>\n          )\n        )}\n      </DayCellContent>\n    )\n  }\n}\n\nfunction renderTopInner(props: DayCellContentArg) {\n  return props.dayNumberText\n}\n","import { createFormatter } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport const DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport function hasListItemDisplay(seg: TableSeg) {\n  let { display } = seg.eventRange.ui\n\n  return display === 'list-item' || (\n    display === 'auto' &&\n    !seg.eventRange.def.allDay &&\n    seg.firstCol === seg.lastCol && // can't be multi-day\n    seg.isStart && // \"\n    seg.isEnd // \"\n  )\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface TableBlockEventProps extends MinimalEventProps {\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableBlockEvent extends BaseComponent<TableBlockEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TABLE_EVENT_TIME_FORMAT}\n        defaultDisplayEventEnd={props.defaultDisplayEventEnd}\n        disableResizing={!props.seg.eventRange.def.allDay}\n      />\n    )\n  }\n}\n","import {\n  createElement,\n  BaseComponent,\n  Seg,\n  EventRoot,\n  buildSegTimeText,\n  EventContentArg,\n  Fragment,\n  getSegAnchorAttrs,\n} from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface DotTableEventProps {\n  seg: Seg\n  isDragging: boolean\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableListItemEvent extends BaseComponent<DotTableEventProps> {\n  render() {\n    let { props, context } = this\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT\n    let timeText = buildSegTimeText(\n      props.seg,\n      timeFormat,\n      context,\n      true,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={props.seg}\n        timeText={timeText}\n        defaultContent={renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={false}\n        isDateSelecting={false}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => ( // we don't use styles!\n          <a\n            className={['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' ')}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(props.seg, context)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <Fragment>\n      <div\n        className=\"fc-daygrid-event-dot\"\n        style={{ borderColor: innerProps.borderColor || innerProps.backgroundColor }}\n      />\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title\">\n        {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n      </div>\n    </Fragment>\n  )\n}\n","import {\n  createElement,\n  MoreLinkRoot,\n  RefObject,\n  BaseComponent,\n  memoize,\n  DateMarker,\n  Dictionary,\n  DateProfile,\n  DateRange,\n  EventSegUiInteractionState,\n  getSegMeta,\n  Fragment,\n  createAriaClickAttrs,\n} from '@fullcalendar/common'\nimport { TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableCellMoreLinkProps {\n  allDayDate: DateMarker\n  singlePlacements: TableSegPlacement[]\n  moreCnt: number\n  alignmentElRef: RefObject<HTMLElement> // for popover\n  alignGridTop: boolean // for popover\n  extraDateSpan?: Dictionary\n  dateProfile: DateProfile\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n}\n\nexport class TableCellMoreLink extends BaseComponent<TableCellMoreLinkProps> {\n  compileSegs = memoize(compileSegs)\n\n  render() {\n    let { props } = this\n    let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements)\n\n    return (\n      <MoreLinkRoot\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        allDayDate={props.allDayDate}\n        moreCnt={props.moreCnt}\n        allSegs={allSegs}\n        hiddenSegs={invisibleSegs}\n        alignmentElRef={props.alignmentElRef}\n        alignGridTop={props.alignGridTop}\n        extraDateSpan={props.extraDateSpan}\n        popoverContent={() => {\n          let isForcedInvisible =\n            (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n            (props.eventResize ? props.eventResize.affectedInstances : null) ||\n            {}\n          return (\n            <Fragment>\n              {allSegs.map((seg) => {\n                let instanceId = seg.eventRange.instance.instanceId\n                return (\n                  <div\n                    className=\"fc-daygrid-event-harness\"\n                    key={instanceId}\n                    style={{\n                      visibility: isForcedInvisible[instanceId] ? 'hidden' : ('' as any),\n                    }}\n                  >\n                    {hasListItemDisplay(seg) ? (\n                      <TableListItemEvent\n                        seg={seg}\n                        isDragging={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    ) : (\n                      <TableBlockEvent\n                        seg={seg}\n                        isDragging={false}\n                        isResizing={false}\n                        isDateSelecting={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n            </Fragment>\n          )\n        }}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) => (\n          <a\n            ref={rootElRef}\n            className={['fc-daygrid-more-link'].concat(classNames).join(' ')}\n            title={title}\n            aria-expanded={isExpanded}\n            aria-controls={popoverId}\n            {...createAriaClickAttrs(handleClick)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </MoreLinkRoot>\n    )\n  }\n}\n\nfunction compileSegs(singlePlacements: TableSegPlacement[]): {\n  allSegs: TableSeg[]\n  invisibleSegs: TableSeg[]\n} {\n  let allSegs: TableSeg[] = []\n  let invisibleSegs: TableSeg[] = []\n\n  for (let placement of singlePlacements) {\n    allSegs.push(placement.seg)\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg)\n    }\n  }\n\n  return { allSegs, invisibleSegs }\n}\n","import {\n  Ref,\n  ComponentChildren,\n  createElement,\n  DateMarker,\n  DateComponent,\n  DateRange,\n  buildNavLinkAttrs,\n  WeekNumberRoot,\n  DayCellRoot,\n  DateProfile,\n  setRef,\n  createFormatter,\n  Dictionary,\n  createRef,\n  EventSegUiInteractionState,\n  getUniqueDomId,\n} from '@fullcalendar/common'\nimport { TableCellTop } from './TableCellTop'\nimport { TableCellMoreLink } from './TableCellMoreLink'\nimport { TableSegPlacement } from './event-placement'\n\nexport interface TableCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  extraDateSpan?: Dictionary\n  elRef?: Ref<HTMLTableCellElement>\n  innerElRef?: Ref<HTMLDivElement>\n  bgContent: ComponentChildren\n  fgContentElRef?: Ref<HTMLDivElement> // TODO: rename!!! classname confusion. is the \"event\" div\n  fgContent: ComponentChildren\n  moreCnt: number\n  moreMarginTop: number\n  showDayNumber: boolean\n  showWeekNumber: boolean\n  forceDayTop: boolean\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  singlePlacements: TableSegPlacement[]\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })\n\nexport class TableCell extends DateComponent<TableCellProps> {\n  private rootElRef = createRef<HTMLElement>()\n  state = {\n    dayNumberId: getUniqueDomId(),\n  }\n\n  render() {\n    let { context, props, state, rootElRef } = this\n    let { date, dateProfile } = props\n    let navLinkAttrs = buildNavLinkAttrs(context, date, 'week')\n\n    return (\n      <DayCellRoot\n        date={date}\n        dateProfile={dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        elRef={this.handleRootEl}\n      >\n        {(dayElRef, dayClassNames, rootDataAttrs, isDisabled) => (\n          <td\n            ref={dayElRef}\n            role=\"gridcell\"\n            className={['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')}\n            {...rootDataAttrs}\n            {...props.extraDataAttrs}\n            {...(props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})}\n          >\n            <div className=\"fc-daygrid-day-frame fc-scrollgrid-sync-inner\" ref={props.innerElRef /* different from hook system! RENAME */}>\n              {props.showWeekNumber && (\n                <WeekNumberRoot date={date} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n                  {(weekElRef, weekClassNames, innerElRef, innerContent) => (\n                    <a\n                      ref={weekElRef}\n                      className={['fc-daygrid-week-number'].concat(weekClassNames).join(' ')}\n                      {...navLinkAttrs}\n                    >\n                      {innerContent}\n                    </a>\n                  )}\n                </WeekNumberRoot>\n              )}\n              {!isDisabled && (\n                <TableCellTop\n                  date={date}\n                  dateProfile={dateProfile}\n                  showDayNumber={props.showDayNumber}\n                  dayNumberId={state.dayNumberId}\n                  forceDayTop={props.forceDayTop}\n                  todayRange={props.todayRange}\n                  extraHookProps={props.extraHookProps}\n                />\n              )}\n              <div\n                className=\"fc-daygrid-day-events\"\n                ref={props.fgContentElRef}\n              >\n                {props.fgContent}\n                <div className=\"fc-daygrid-day-bottom\" style={{ marginTop: props.moreMarginTop }}>\n                  <TableCellMoreLink\n                    allDayDate={date}\n                    singlePlacements={props.singlePlacements}\n                    moreCnt={props.moreCnt}\n                    alignmentElRef={rootElRef}\n                    alignGridTop={!props.showDayNumber}\n                    extraDateSpan={props.extraDateSpan}\n                    dateProfile={props.dateProfile}\n                    eventSelection={props.eventSelection}\n                    eventDrag={props.eventDrag}\n                    eventResize={props.eventResize}\n                    todayRange={props.todayRange}\n                  />\n                </div>\n              </div>\n              <div className=\"fc-daygrid-day-bg\">\n                {props.bgContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement) => {\n    setRef(this.rootElRef, el)\n    setRef(this.props.elRef, el)\n  }\n}\n","import {\n  SegHierarchy,\n  SegRect,\n  SegEntry,\n  SegInsertion,\n  buildEntryKey,\n  EventRenderRange,\n  intersectRanges,\n  addDays,\n  DayTableCell,\n  intersectSpans,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableSegPlacement {\n  seg: TableSeg\n  isVisible: boolean\n  isAbsolute: boolean\n  absoluteTop: number // populated regardless of isAbsolute\n  marginTop: number\n}\n\nexport function computeFgSegPlacement(\n  segs: TableSeg[], // assumed already sorted\n  dayMaxEvents: boolean | number,\n  dayMaxEventRows: boolean | number,\n  strictOrder: boolean,\n  eventInstanceHeights: { [instanceId: string]: number },\n  maxContentHeight: number | null,\n  cells: DayTableCell[],\n) {\n  let hierarchy = new DayGridSegHierarchy()\n  hierarchy.allowReslicing = true\n  hierarchy.strictOrder = strictOrder\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight\n    hierarchy.hiddenConsumes = true\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows\n    hierarchy.hiddenConsumes = true\n  }\n\n  // create segInputs only for segs with known heights\n  let segInputs: SegEntry[] = []\n  let unknownHeightSegs: TableSeg[] = []\n  for (let i = 0; i < segs.length; i += 1) {\n    let seg = segs[i]\n    let { instanceId } = seg.eventRange.instance\n    let eventHeight = eventInstanceHeights[instanceId]\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1,\n        },\n      })\n    } else {\n      unknownHeightSegs.push(seg)\n    }\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs)\n  let segRects = hierarchy.toRects()\n  let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells)\n\n  let moreCnts: number[] = []\n  let moreMarginTops: number[] = []\n\n  // add segs with unknown heights\n  for (let seg of unknownHeightSegs) {\n    multiColPlacements[seg.firstCol].push({\n      seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // add the hidden entries\n  for (let col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0)\n  }\n  for (let hiddenEntry of hiddenEntries) {\n    let seg = segs[hiddenEntry.index]\n    let hiddenSpan = hiddenEntry.span\n\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // deal with leftover margins\n  for (let col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col])\n  }\n\n  return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops }\n}\n\n// rects ordered by top coord, then left\nfunction placeRects(allRects: SegRect[], segs: TableSeg[], cells: DayTableCell[]) {\n  let rectsByEachCol = groupRectsByEachCol(allRects, cells.length)\n  let singleColPlacements: TableSegPlacement[][] = []\n  let multiColPlacements: TableSegPlacement[][] = []\n  let leftoverMargins: number[] = []\n\n  for (let col = 0; col < cells.length; col += 1) {\n    let rects = rectsByEachCol[col]\n\n    // compute all static segs in singlePlacements\n    let singlePlacements: TableSegPlacement[] = []\n    let currentHeight = 0\n    let currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight,\n      })\n      currentHeight = rect.levelCoord + rect.thickness\n    }\n\n    // compute mixed static/absolute segs in multiPlacements\n    let multiPlacements: TableSegPlacement[] = []\n    currentHeight = 0\n    currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      let isAbsolute = rect.span.end - rect.span.start > 1 // multi-column?\n      let isFirstCol = rect.span.start === col\n\n      currentMarginTop += rect.levelCoord - currentHeight // amount of space since bottom of previous seg\n      currentHeight = rect.levelCoord + rect.thickness // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0,\n          })\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop, // claim the margin\n        })\n        currentMarginTop = 0\n      }\n    }\n\n    singleColPlacements.push(singlePlacements)\n    multiColPlacements.push(multiPlacements)\n    leftoverMargins.push(currentMarginTop)\n  }\n\n  return { singleColPlacements, multiColPlacements, leftoverMargins }\n}\n\nfunction groupRectsByEachCol(rects: SegRect[], colCnt: number): SegRect[][] {\n  let rectsByEachCol: SegRect[][] = []\n\n  for (let col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([])\n  }\n\n  for (let rect of rects) {\n    for (let col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect)\n    }\n  }\n\n  return rectsByEachCol\n}\n\nfunction resliceSeg(seg: TableSeg, spanStart: number, spanEnd: number, cells: DayTableCell[]): TableSeg {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg\n  }\n\n  let eventRange = seg.eventRange\n  let origRange = eventRange.range\n  let slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1),\n  })\n\n  return {\n    ...seg,\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\n      instance: eventRange.instance,\n      range: slicedRange,\n    } as EventRenderRange,\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf(),\n  }\n}\n\nclass DayGridSegHierarchy extends SegHierarchy {\n  // config\n  hiddenConsumes: boolean = false\n\n  // allows us to keep hidden entries in the hierarchy so they take up space\n  forceHidden: { [entryId: string]: true } = {}\n\n  addSegs(segInputs: SegEntry[]): SegEntry[] {\n    const hiddenSegs = super.addSegs(segInputs)\n    const { entriesByLevel } = this\n    const excludeHidden = (entry: SegEntry) => !this.forceHidden[buildEntryKey(entry)]\n\n    // remove the forced-hidden segs\n    for (let level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden)\n    }\n\n    return hiddenSegs\n  }\n\n  handleInvalidInsertion(insertion: SegInsertion, entry: SegEntry, hiddenEntries: SegEntry[]) {\n    const { entriesByLevel, forceHidden } = this\n    const { touchingEntry, touchingLevel, touchingLateral } = insertion\n\n    if (this.hiddenConsumes && touchingEntry) {\n      const touchingEntryId = buildEntryKey(touchingEntry)\n      // if not already hidden\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          const placeholderEntry: SegEntry = { // placeholder of the \"more\" link\n            ...touchingEntry,\n            span: intersectSpans(touchingEntry.span, entry.span),\n          }\n          const placeholderEntryId = buildEntryKey(placeholderEntry)\n          forceHidden[placeholderEntryId] = true\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry // replace touchingEntry with our placeholder\n          this.splitEntry(touchingEntry, entry, hiddenEntries) // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true\n          hiddenEntries.push(touchingEntry)\n        }\n      }\n    }\n\n    return super.handleInvalidInsertion(insertion, entry, hiddenEntries)\n  }\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  createElement,\n  PositionCache,\n  RefMap,\n  CssDimValue,\n  DateRange,\n  getSegMeta,\n  DateProfile,\n  Fragment,\n  BgEvent,\n  renderFill,\n  isPropsEqual,\n  createRef,\n  buildEventRangeKey,\n  sortEventSegs,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByFirstCol } from './TableSeg'\nimport { TableCell } from './TableCell'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { computeFgSegPlacement, TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\n\n// TODO: attach to window resize?\n\nexport interface TableRowProps {\n  cells: DayTableCell[]\n  renderIntro?: () => VNode\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  clientWidth: number | null\n  clientHeight: number | null // simply for causing an updateSize, for when liquid height\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumbers: boolean\n  showWeekNumbers: boolean\n  forPrint: boolean\n}\n\ninterface TableRowState {\n  framePositions: PositionCache\n  maxContentHeight: number | null\n  eventInstanceHeights: { [instanceId: string]: number } // integers\n}\n\nexport class TableRow extends DateComponent<TableRowProps, TableRowState> {\n  private cellElRefs = new RefMap<HTMLTableCellElement>() // the <td>\n  private frameElRefs = new RefMap<HTMLElement>() // the fc-daygrid-day-frame\n  private fgElRefs = new RefMap<HTMLDivElement>() // the fc-daygrid-day-events\n  private segHarnessRefs = new RefMap<HTMLDivElement>() // indexed by \"instanceId:firstCol\"\n  private rootElRef = createRef<HTMLTableRowElement>()\n\n  state: TableRowState = {\n    framePositions: null,\n    maxContentHeight: null,\n    eventInstanceHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let colCnt = props.cells.length\n\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt)\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt)\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)\n\n    let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(\n      sortEventSegs(props.fgEventSegs, options.eventOrder) as TableSeg[],\n      props.dayMaxEvents,\n      props.dayMaxEventRows,\n      options.eventOrderStrict,\n      state.eventInstanceHeights,\n      state.maxContentHeight,\n      props.cells,\n    )\n\n    let isForcedInvisible = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    return (\n      <tr ref={this.rootElRef} role=\"row\">\n        {props.renderIntro && props.renderIntro()}\n        {props.cells.map((cell, col) => {\n          let normalFgNodes = this.renderFgSegs(\n            col,\n            props.forPrint ? singleColPlacements[col] : multiColPlacements[col],\n            props.todayRange,\n            isForcedInvisible,\n          )\n\n          let mirrorFgNodes = this.renderFgSegs(\n            col,\n            buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements),\n            props.todayRange,\n            {},\n            Boolean(props.eventDrag),\n            Boolean(props.eventResize),\n            false, // date-selecting (because mirror is never drawn for date selection)\n          )\n\n          return (\n            <TableCell\n              key={cell.key}\n              elRef={this.cellElRefs.createRef(cell.key)}\n              innerElRef={this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */}\n              dateProfile={props.dateProfile}\n              date={cell.date}\n              showDayNumber={props.showDayNumbers}\n              showWeekNumber={props.showWeekNumbers && col === 0}\n              forceDayTop={props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */}\n              todayRange={props.todayRange}\n              eventSelection={props.eventSelection}\n              eventDrag={props.eventDrag}\n              eventResize={props.eventResize}\n              extraHookProps={cell.extraHookProps}\n              extraDataAttrs={cell.extraDataAttrs}\n              extraClassNames={cell.extraClassNames}\n              extraDateSpan={cell.extraDateSpan}\n              moreCnt={moreCnts[col]}\n              moreMarginTop={moreMarginTops[col]}\n              singlePlacements={singleColPlacements[col]}\n              fgContentElRef={this.fgElRefs.createRef(cell.key)}\n              fgContent={( // Fragment scopes the keys\n                <Fragment>\n                  <Fragment>{normalFgNodes}</Fragment>\n                  <Fragment>{mirrorFgNodes}</Fragment>\n                </Fragment>\n              )}\n              bgContent={( // Fragment scopes the keys\n                <Fragment>\n                  {this.renderFillSegs(highlightSegsByCol[col], 'highlight')}\n                  {this.renderFillSegs(businessHoursByCol[col], 'non-business')}\n                  {this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')}\n                </Fragment>\n              )}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing(true)\n  }\n\n  componentDidUpdate(prevProps: TableRowProps, prevState: TableRowState) {\n    let currentProps = this.props\n\n    this.updateSizing(\n      !isPropsEqual(prevProps, currentProps),\n    )\n  }\n\n  getHighlightSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n      return props.eventDrag.segs as TableSeg[]\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return props.dateSelectionSegs\n  }\n\n  getMirrorSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return []\n  }\n\n  renderFgSegs(\n    col: number,\n    segPlacements: TableSegPlacement[],\n    todayRange: DateRange,\n    isForcedInvisible: { [instanceId: string]: any },\n    isDragging?: boolean,\n    isResizing?: boolean,\n    isDateSelecting?: boolean,\n  ): VNode[] {\n    let { context } = this\n    let { eventSelection } = this.props\n    let { framePositions } = this.state\n    let defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1\n    let isMirror = isDragging || isResizing || isDateSelecting\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let placement of segPlacements) {\n        let { seg } = placement\n        let { instanceId } = seg.eventRange.instance\n        let key = instanceId + ':' + col\n        let isVisible = placement.isVisible && !isForcedInvisible[instanceId]\n        let isAbsolute = placement.isAbsolute\n        let left: CssDimValue = ''\n        let right: CssDimValue = ''\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n          } else {\n            left = 0\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n          }\n        }\n\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n        nodes.push(\n          <div\n            className={'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : '')}\n            key={key}\n            ref={isMirror ? null : this.segHarnessRefs.createRef(key)}\n            style={{\n              visibility: isVisible ? ('' as any) : 'hidden',\n              marginTop: isAbsolute ? '' : placement.marginTop,\n              top: isAbsolute ? placement.absoluteTop : '',\n              left,\n              right,\n            }}\n          >\n            {hasListItemDisplay(seg) ? (\n              <TableListItemEvent\n                seg={seg}\n                isDragging={isDragging}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            ) : (\n              <TableBlockEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            )}\n          </div>,\n        )\n      }\n    }\n\n    return nodes\n  }\n\n  renderFillSegs(segs: TableSeg[], fillType: string): VNode {\n    let { isRtl } = this.context\n    let { todayRange } = this.props\n    let { framePositions } = this.state\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n        }\n\n        nodes.push(\n          <div\n            key={buildEventRangeKey(seg.eventRange)}\n            className=\"fc-daygrid-bg-harness\"\n            style={leftRightCss}\n          >\n            {fillType === 'bg-event' ?\n              <BgEvent seg={seg} {...getSegMeta(seg, todayRange)} /> :\n              renderFill(fillType)}\n          </div>,\n        )\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes)\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let { props, frameElRefs } = this\n\n    if (\n      !props.forPrint &&\n      props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key])\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current\n\n          this.setState({ // will trigger isCellPositionsChanged...\n            framePositions: new PositionCache(\n              originEl,\n              frameEls,\n              true, // isHorizontal\n              false,\n            ),\n          })\n        }\n      }\n\n      const oldInstanceHeights = this.state.eventInstanceHeights\n      const newInstanceHeights = this.queryEventInstanceHeights()\n      const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true\n\n      this.safeSetState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: { ...oldInstanceHeights, ...newInstanceHeights },\n\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n      })\n    }\n  }\n\n  queryEventInstanceHeights() {\n    let segElMap = this.segHarnessRefs.currentMap\n    let eventInstanceHeights: { [key: string]: number } = {}\n\n    // get the max height amongst instance segs\n    for (let key in segElMap) {\n      let height = Math.round(segElMap[key].getBoundingClientRect().height)\n      let instanceId = key.split(':')[0] // deconstruct how renderFgSegs makes the key\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height)\n    }\n\n    return eventInstanceHeights\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key\n    let cellEl = this.cellElRefs.currentMap[firstKey]\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey]\n\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top\n  }\n\n  public getCellEls() {\n    let elMap = this.cellElRefs.currentMap\n\n    return this.props.cells.map((cell) => elMap[cell.key])\n  }\n}\n\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual,\n})\n\nfunction buildMirrorPlacements(mirrorSegs: TableSeg[], colPlacements: TableSegPlacement[][]): TableSegPlacement[] {\n  if (!mirrorSegs.length) {\n    return []\n  }\n  let topsByInstanceId = buildAbsoluteTopHash(colPlacements) // TODO: cache this at first render?\n  return mirrorSegs.map((seg: TableSeg) => ({\n    seg,\n    isVisible: true,\n    isAbsolute: true,\n    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n    marginTop: 0,\n  }))\n}\n\nfunction buildAbsoluteTopHash(colPlacements: TableSegPlacement[][]): { [instanceId: string]: number } {\n  let topsByInstanceId: { [instanceId: string]: number } = {}\n\n  for (let placements of colPlacements) {\n    for (let placement of placements) {\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop\n    }\n  }\n\n  return topsByInstanceId\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  RefObject,\n  CssDimValue,\n  createElement,\n  PositionCache,\n  memoize,\n  addDays,\n  RefMap,\n  DateRange,\n  NowTimer,\n  DateMarker,\n  DateProfile,\n  Fragment,\n  Hit,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByRow, splitInteractionByRow } from './TableSeg'\nimport { TableRow } from './TableRow'\n\nexport interface TableProps {\n  dateProfile: DateProfile\n  cells: DayTableCell[][] // cells-BY-ROW\n  renderRowIntro?: () => VNode\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  expandRows: boolean\n  showWeekNumbers: boolean\n  clientWidth: number | null\n  clientHeight: number | null\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  headerAlignElRef?: RefObject<HTMLElement>\n  forPrint: boolean\n  isHitComboAllowed?: (hit0: Hit, hit1: Hit) => boolean\n}\n\nexport class Table extends DateComponent<TableProps> {\n  private splitBusinessHourSegs = memoize(splitSegsByRow)\n  private splitBgEventSegs = memoize(splitSegsByRow)\n  private splitFgEventSegs = memoize(splitSegsByRow)\n  private splitDateSelectionSegs = memoize(splitSegsByRow)\n  private splitEventDrag = memoize(splitInteractionByRow)\n  private splitEventResize = memoize(splitInteractionByRow)\n  private rootEl: HTMLElement\n  private rowRefs = new RefMap<TableRow>()\n  private rowPositions: PositionCache\n  private colPositions: PositionCache\n\n  render() {\n    let { props } = this\n    let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props\n    let rowCnt = props.cells.length\n\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)\n\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true\n\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false\n      dayMaxEventRows = null\n      dayMaxEvents = null\n    }\n\n    let classNames = [\n      'fc-daygrid-body',\n      limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', // will all row heights be equal?\n      expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n    ]\n\n    return (\n      <div\n        className={classNames.join(' ')}\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <NowTimer unit=\"day\">\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <table\n                role=\"presentation\"\n                className=\"fc-scrollgrid-sync-table\"\n                style={{\n                  width: props.clientWidth,\n                  minWidth: props.tableMinWidth,\n                  height: expandRows ? props.clientHeight : '',\n                }}\n              >\n                {props.colGroupNode}\n                <tbody role=\"presentation\">\n                  {props.cells.map((cells, row) => (\n                    <TableRow\n                      ref={this.rowRefs.createRef(row)}\n                      key={\n                        cells.length\n                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                          : row // in case there are no cells (like when resource view is loading)\n                      }\n                      showDayNumbers={rowCnt > 1}\n                      showWeekNumbers={props.showWeekNumbers}\n                      todayRange={todayRange}\n                      dateProfile={dateProfile}\n                      cells={cells}\n                      renderIntro={props.renderRowIntro}\n                      businessHourSegs={businessHourSegsByRow[row]}\n                      eventSelection={props.eventSelection}\n                      bgEventSegs={bgEventSegsByRow[row].filter(isSegAllDay) /* hack */}\n                      fgEventSegs={fgEventSegsByRow[row]}\n                      dateSelectionSegs={dateSelectionSegsByRow[row]}\n                      eventDrag={eventDragByRow[row]}\n                      eventResize={eventResizeByRow[row]}\n                      dayMaxEvents={dayMaxEvents}\n                      dayMaxEventRows={dayMaxEventRows}\n                      clientWidth={props.clientWidth}\n                      clientHeight={props.clientHeight}\n                      forPrint={props.forPrint}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    this.rootEl = rootEl\n\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, {\n        el: rootEl,\n        isHitComboAllowed: this.props.isHitComboAllowed,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n      false,\n      true, // vertical\n    )\n\n    this.colPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false,\n    )\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let { colPositions, rowPositions } = this\n    let col = colPositions.leftToIndex(positionLeft)\n    let row = rowPositions.topToIndex(positionTop)\n\n    if (row != null && col != null) {\n      let cell = this.props.cells[row][col]\n\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true,\n          ...cell.extraDateSpan,\n        },\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row],\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n\n  private getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal\n  }\n\n  private getCellRange(row, col) {\n    let start = this.props.cells[row][col].date\n    let end = addDays(start, 1)\n    return { start, end }\n  }\n}\n\nfunction isSegAllDay(seg: TableSeg) {\n  return seg.eventRange.def.allDay\n}\n","import { DayTableModel, DateRange, Slicer } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport class DayTableSlicer extends Slicer<TableSeg, [DayTableModel]> {\n  forceDayIfListItem = true\n\n  sliceRange(dateRange: DateRange, dayTableModel: DayTableModel): TableSeg[] {\n    return dayTableModel.sliceRange(dateRange)\n  }\n}\n","import {\n  createElement, createRef, VNode,\n  EventStore,\n  EventUiHash,\n  DateSpan,\n  EventInteractionState,\n  DayTableModel,\n  Duration,\n  DateComponent,\n  ViewContext,\n  RefObject,\n  CssDimValue,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { Table } from './Table'\nimport { DayTableSlicer } from './DayTableSlicer'\n\nexport interface DayTableProps {\n  dateProfile: DateProfile,\n  dayTableModel: DayTableModel\n  nextDayThreshold: Duration\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class DayTable extends DateComponent<DayTableProps, ViewContext> {\n  private slicer = new DayTableSlicer()\n  private tableRef = createRef<Table>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <Table\n        ref={this.tableRef}\n        {...this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel)}\n        dateProfile={props.dateProfile}\n        cells={props.dayTableModel.cells}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n  }\n}\n","import {\n  createElement, createRef,\n  DayHeader,\n  DateProfileGenerator,\n  DateProfile,\n  memoize,\n  DaySeriesModel,\n  DayTableModel,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { TableView } from './TableView'\nimport { DayTable } from './DayTable'\n\nexport class DayTableView extends TableView {\n  private buildDayTableModel = memoize(buildDayTableModel)\n  private headerRef = createRef<DayHeader>()\n  private tableRef = createRef<DayTable>()\n\n  render() {\n    let { options, dateProfileGenerator } = this.context\n    let { props } = this\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator)\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        ref={this.headerRef}\n        dateProfile={props.dateProfile}\n        dates={dayTableModel.headerDates}\n        datesRepDistinctDays={dayTableModel.rowCnt === 1}\n      />\n    )\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        dayTableModel={dayTableModel}\n        businessHours={props.businessHours}\n        dateSelection={props.dateSelection}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        colGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n}\n\nexport function buildDayTableModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(\n    daySeries,\n    /year|month|week/.test(dateProfile.currentRangeUnit),\n  )\n}\n","import {\n  DateProfileGenerator,\n  addWeeks, diffWeeks,\n  DateRange,\n} from '@fullcalendar/common'\n\nexport class TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered.\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\n    let { dateEnv } = this.props\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\n    let start = renderRange.start\n    let end = renderRange.end\n    let endOfWeek\n\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start)\n\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end)\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1)\n      }\n    }\n\n    // ensure 6 weeks\n    if (\n      this.props.monthMode &&\n      this.props.fixedWeekCount\n    ) {\n      let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        diffWeeks(start, end),\n      )\n      end = addWeeks(end, 6 - rowCnt)\n    }\n\n    return { start, end }\n  }\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { DayTableView } from './DayTableView'\nimport { TableDateProfileGenerator } from './TableDateProfileGenerator'\nimport './main.css'\n\nexport { DayTable } from './DayTable'\nexport { DayTableSlicer } from './DayTableSlicer'\nexport { Table } from './Table'\nexport { TableSeg } from './TableSeg'\nexport { TableView } from './TableView'\nexport { buildDayTableModel } from './DayTableView'\nexport { DayTableView as DayGridView } // export as old name!\n\nexport default createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n    },\n\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: { days: 1 },\n    },\n\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: { weeks: 1 },\n    },\n\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: { months: 1 },\n      monthMode: true,\n      fixedWeekCount: true,\n    },\n\n  },\n})\n"]},"metadata":{},"sourceType":"module"}