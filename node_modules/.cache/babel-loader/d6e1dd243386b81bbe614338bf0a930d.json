{"ast":null,"code":"// import { useTheme } from \"@mui/material\";\n// import { ResponsiveBar } from \"@nivo/bar\";\n// import { tokens } from \"../theme\";\n// import { mockBarData as data } from \"../data/mockData\";\n\n// const BarChart = ({ isDashboard = false }) => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n\n//   return (\n//     <ResponsiveBar\n//       data={data}\n//       theme={{\n//         // added\n//         axis: {\n//           domain: {\n//             line: {\n//               stroke: colors.grey[100],\n//             },\n//           },\n//           legend: {\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//           ticks: {\n//             line: {\n//               stroke: colors.grey[100],\n//               strokeWidth: 1,\n//             },\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//         },\n//         legends: {\n//           text: {\n//             fill: colors.grey[100],\n//           },\n//         },\n//       }}\n//       keys={[\"hot dog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n//       indexBy=\"country\"\n//       margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n//       padding={0.3}\n//       valueScale={{ type: \"linear\" }}\n//       indexScale={{ type: \"band\", round: true }}\n//       colors={{ scheme: \"nivo\" }}\n//       defs={[\n//         {\n//           id: \"dots\",\n//           type: \"patternDots\",\n//           background: \"inherit\",\n//           color: \"#38bcb2\",\n//           size: 4,\n//           padding: 1,\n//           stagger: true,\n//         },\n//         {\n//           id: \"lines\",\n//           type: \"patternLines\",\n//           background: \"inherit\",\n//           color: \"#eed312\",\n//           rotation: -45,\n//           lineWidth: 6,\n//           spacing: 10,\n//         },\n//       ]}\n//       borderColor={{\n//         from: \"color\",\n//         modifiers: [[\"darker\", \"1.6\"]],\n//       }}\n//       axisTop={null}\n//       axisRight={null}\n//       axisBottom={{\n//         tickSize: 5,\n//         tickPadding: 5,\n//         tickRotation: 0,\n//         legend: isDashboard ? undefined : \"country\", // changed\n//         legendPosition: \"middle\",\n//         legendOffset: 32,\n//       }}\n//       axisLeft={{\n//         tickSize: 5,\n//         tickPadding: 5,\n//         tickRotation: 0,\n//         legend: isDashboard ? undefined : \"food\", // changed\n//         legendPosition: \"middle\",\n//         legendOffset: -40,\n//       }}\n//       enableLabel={false}\n//       labelSkipWidth={12}\n//       labelSkipHeight={12}\n//       labelTextColor={{\n//         from: \"color\",\n//         modifiers: [[\"darker\", 1.6]],\n//       }}\n//       legends={[\n//         {\n//           dataFrom: \"keys\",\n//           anchor: \"bottom-right\",\n//           direction: \"column\",\n//           justify: false,\n//           translateX: 120,\n//           translateY: 0,\n//           itemsSpacing: 2,\n//           itemWidth: 100,\n//           itemHeight: 20,\n//           itemDirection: \"left-to-right\",\n//           itemOpacity: 0.85,\n//           symbolSize: 20,\n//           effects: [\n//             {\n//               on: \"hover\",\n//               style: {\n//                 itemOpacity: 1,\n//               },\n//             },\n//           ],\n//         },\n//       ]}\n//       role=\"application\"\n//       barAriaLabel={function (e) {\n//         return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\n//       }}\n//     />\n//   );\n// };\n\n// export default BarChart;","map":{"version":3,"names":[],"sources":["/home/student/Desktop/Upeo/dashboard/src/components/BarChart.jsx"],"sourcesContent":["// import { useTheme } from \"@mui/material\";\n// import { ResponsiveBar } from \"@nivo/bar\";\n// import { tokens } from \"../theme\";\n// import { mockBarData as data } from \"../data/mockData\";\n\n// const BarChart = ({ isDashboard = false }) => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n\n//   return (\n//     <ResponsiveBar\n//       data={data}\n//       theme={{\n//         // added\n//         axis: {\n//           domain: {\n//             line: {\n//               stroke: colors.grey[100],\n//             },\n//           },\n//           legend: {\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//           ticks: {\n//             line: {\n//               stroke: colors.grey[100],\n//               strokeWidth: 1,\n//             },\n//             text: {\n//               fill: colors.grey[100],\n//             },\n//           },\n//         },\n//         legends: {\n//           text: {\n//             fill: colors.grey[100],\n//           },\n//         },\n//       }}\n//       keys={[\"hot dog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n//       indexBy=\"country\"\n//       margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n//       padding={0.3}\n//       valueScale={{ type: \"linear\" }}\n//       indexScale={{ type: \"band\", round: true }}\n//       colors={{ scheme: \"nivo\" }}\n//       defs={[\n//         {\n//           id: \"dots\",\n//           type: \"patternDots\",\n//           background: \"inherit\",\n//           color: \"#38bcb2\",\n//           size: 4,\n//           padding: 1,\n//           stagger: true,\n//         },\n//         {\n//           id: \"lines\",\n//           type: \"patternLines\",\n//           background: \"inherit\",\n//           color: \"#eed312\",\n//           rotation: -45,\n//           lineWidth: 6,\n//           spacing: 10,\n//         },\n//       ]}\n//       borderColor={{\n//         from: \"color\",\n//         modifiers: [[\"darker\", \"1.6\"]],\n//       }}\n//       axisTop={null}\n//       axisRight={null}\n//       axisBottom={{\n//         tickSize: 5,\n//         tickPadding: 5,\n//         tickRotation: 0,\n//         legend: isDashboard ? undefined : \"country\", // changed\n//         legendPosition: \"middle\",\n//         legendOffset: 32,\n//       }}\n//       axisLeft={{\n//         tickSize: 5,\n//         tickPadding: 5,\n//         tickRotation: 0,\n//         legend: isDashboard ? undefined : \"food\", // changed\n//         legendPosition: \"middle\",\n//         legendOffset: -40,\n//       }}\n//       enableLabel={false}\n//       labelSkipWidth={12}\n//       labelSkipHeight={12}\n//       labelTextColor={{\n//         from: \"color\",\n//         modifiers: [[\"darker\", 1.6]],\n//       }}\n//       legends={[\n//         {\n//           dataFrom: \"keys\",\n//           anchor: \"bottom-right\",\n//           direction: \"column\",\n//           justify: false,\n//           translateX: 120,\n//           translateY: 0,\n//           itemsSpacing: 2,\n//           itemWidth: 100,\n//           itemHeight: 20,\n//           itemDirection: \"left-to-right\",\n//           itemOpacity: 0.85,\n//           symbolSize: 20,\n//           effects: [\n//             {\n//               on: \"hover\",\n//               style: {\n//                 itemOpacity: 1,\n//               },\n//             },\n//           ],\n//         },\n//       ]}\n//       role=\"application\"\n//       barAriaLabel={function (e) {\n//         return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\n//       }}\n//     />\n//   );\n// };\n\n// export default BarChart;\n"],"mappings},"metadata":{},"sourceType":"module"}